#lang at-exp racket/base

(require racket/format racket/list racket/file racket/path racket/runtime-path
         net/base64)
(provide (all-defined-out))

(define-runtime-path public "../public")



(define (div-wrap h+ps)
  `(div ((class "sub"))
        (h2 ((style "margin-bottom: 6px;")) ,(car h+ps))
        (p ((style "margin-top: 6px;")) ,@(add-between (cdr h+ps) '(br)))))

(define (div-wrap/+img h+ps img-file)
  `(div ((class "row"))
        (div ((class "text"))
         (h2 ((id "indent-10")) ,(car h+ps)))
        (div ((class "chart"))
             (img ((src ,(html-base64-en img-file)) (alt "Chart") (class "responsive"))))
        (div ((class "text"))
             (p  ,@(add-between (cdr h+ps) '(br))))))

(define (html-base64-en f)
  (format "data:image/~a;base64, ~a"
          (subbytes (path-get-extension f) 1)
          (base64-encode (file->bytes f))))

(define (->plot-format lst)
  (for/list ([l lst])
    (vector (car l) (cdr l))))


;;;; (require debug/repl)
;;;; (debug-repl)
;; (require racket/trace)
;; (trace ->plot-format)


(define (simplify-weather-text text1 text2)
  (if (string=? text1 text2)
      text1
      @~a{@|text1|转@text2}))

;; (define a (list "新郑" "北京" "哈尔滨" "长春" "沈阳" "天津" "呼和浩特" "乌鲁木齐" "银川" "西宁" "兰州" "西安" "拉萨" "成都" "重庆" "贵阳" "昆明" "太原" "石家庄" "济南" "郑州" "合肥" "南京" "上海" "武汉" "长沙" "南昌" "杭州" "福州" "台北" "南宁" "海口" "广州" "香港" "澳门" "深圳" "厦门" "宁波" "青岛" "大连" "桂林" "汕头" "连云港" "秦皇岛" "延安" "赣州" "三亚" "高雄" "钓鱼岛"))
;; (for/list ([i a]) (cons i (hash-ref (first (hash-ref (http-response-body (city/lookup i)) 'location)) 'id)))
(define lids
  '(("北京" . "101010100")
    ("哈尔滨" . "101050101")
    ("长春" . "101060101")
    ("沈阳" . "101070101")
    ("天津" . "101030100")
    ("呼和浩特" . "101080101")
    ("乌鲁木齐" . "101130101")
    ("银川" . "101170101")
    ("西宁" . "101150101")
    ("兰州" . "101160101")
    ("西安" . "101110101")
    ("拉萨" . "101140101")
    ("成都" . "101270101")
    ("重庆" . "101040100")
    ("贵阳" . "101260101")
    ("昆明" . "101290101")
    ("太原" . "101100101")
    ("石家庄" . "101090101")
    ("济南" . "101120101")
    ("郑州" . "101180101")
    ("合肥" . "101220101")
    ("南京" . "101190101")
    ("上海" . "101020100")
    ("武汉" . "101200101")
    ("长沙" . "101250101")
    ("南昌" . "101240101")
    ("杭州" . "101210101")
    ("福州" . "101230101")
    ("台北" . "101340101")
    ("南宁" . "101300101")
    ("海口" . "101310101")
    ("广州" . "101280101")
    ("香港" . "101320101")
    ("澳门" . "101330101")
    ("深圳" . "101280601")
    ("厦门" . "101230201")
    ("宁波" . "101210401")
    ("青岛" . "101120201")
    ("大连" . "101070201")
    ("桂林" . "101300501")
    ("汕头" . "101280501")
    ("连云港" . "101191001")
    ("秦皇岛" . "101091101")
    ("延安" . "101110300")
    ("赣州" . "101240701")
    ("三亚" . "101310201")
    ("高雄" . "101340201")
    ("钓鱼岛" . "101231001")
    ("新郑市" . "101180106")
    ("北京市房山区" . "101011200")
    ))

(define xz (assoc "新郑市" lids))
(define am (assoc "澳门" lids))
(define sh (assoc "上海" lids))
(define bjfs (assoc "北京市房山区" lids))
(define gl (assoc "桂林" lids))
(define sy (assoc "三亚" lids))
;; (for/last ([i lids]
;;              #:when (string=? (car i) "新郑市"))
;;     i)

